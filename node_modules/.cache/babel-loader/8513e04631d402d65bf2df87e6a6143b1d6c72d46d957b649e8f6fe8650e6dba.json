{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchProducts, fetchProductById, fetchProductCategories } from './productThunk.ts';\n// Define the initial state\nconst initialState = {\n  products: [],\n  product: null,\n  categories: [],\n  loading: false,\n  error: null,\n  categoryLoading: false,\n  categoryError: null,\n  productLoading: false,\n  productError: null\n};\n\n// Create the slice\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    clearProductError: state => {\n      state.error = null;\n    },\n    clearProductState: state => {\n      state.product = null;\n      state.productError = null;\n    }\n  },\n  extraReducers: builder => {\n    // Handle fetching all products\n    builder.addCase(fetchProducts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch products';\n    });\n\n    // Handle fetching a single product\n    builder.addCase(fetchProductById.pending, state => {\n      state.productLoading = true;\n      state.productError = null;\n    }).addCase(fetchProductById.fulfilled, (state, action) => {\n      state.productLoading = false;\n      state.product = action.payload;\n    }).addCase(fetchProductById.rejected, (state, action) => {\n      state.productLoading = false;\n      state.productError = action.error.message || 'Failed to fetch product details';\n    });\n\n    // Handle fetching product categories\n    builder.addCase(fetchProductCategories.pending, state => {\n      state.categoryLoading = true;\n      state.categoryError = null;\n    }).addCase(fetchProductCategories.fulfilled, (state, action) => {\n      state.categoryLoading = false;\n      state.categories = action.payload;\n    }).addCase(fetchProductCategories.rejected, (state, action) => {\n      state.categoryLoading = false;\n      state.categoryError = action.error.message || 'Failed to fetch categories';\n    });\n  }\n});\n\n// Export actions and reducer\nexport const {\n  clearProductError,\n  clearProductState\n} = productsSlice.actions;\nexport default productsSlice;","map":{"version":3,"names":["createSlice","fetchProducts","fetchProductById","fetchProductCategories","initialState","products","product","categories","loading","error","categoryLoading","categoryError","productLoading","productError","productsSlice","name","reducers","clearProductError","state","clearProductState","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions"],"sources":["/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/store/products/productsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchProducts, fetchProductById, fetchProductCategories } from './productThunk.ts';\n\n\nexport interface Tire {\n  id: number;\n  name: string;\n  price: string;\n  sub_bundle: number;\n  features: string[];\n}\n\nexport interface SubBundle {\n  id: number;\n  name: string;\n  bundle: number;\n  tires: Tire[];\n}\n\nexport interface Product {\n  id: number;\n  name: string;\n  description: string;\n  created_by: number | null;\n  sub_bundles: SubBundle[];\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n}\n\ninterface ProductsState {\n  products: Product[];\n  product: Product | null;\n  categories: Category[];\n  loading: boolean;\n  error: string | null;\n  categoryLoading: boolean;\n  categoryError: string | null;\n  productLoading: boolean;\n  productError: string | null;\n}\n\n// Define the initial state\nconst initialState: ProductsState = {\n  products: [],\n  product: null,\n  categories: [],\n  loading: false,\n  error: null,\n  categoryLoading: false,\n  categoryError: null,\n  productLoading: false,\n  productError: null\n};\n\n// Create the slice\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    clearProductError: (state) => {\n      state.error = null;\n    },\n    clearProductState: (state) => {\n      state.product = null;\n      state.productError = null;\n    }\n  },\n  extraReducers: (builder) => {\n    // Handle fetching all products\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchProducts.fulfilled, (state, action: PayloadAction<Product[]>) => {\n        state.loading = false;\n        state.products = action.payload;\n      })\n      .addCase(fetchProducts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Failed to fetch products';\n      })\n      \n    // Handle fetching a single product\n    builder\n      .addCase(fetchProductById.pending, (state) => {\n        state.productLoading = true;\n        state.productError = null;\n      })\n      .addCase(fetchProductById.fulfilled, (state, action: PayloadAction<Product>) => {\n        state.productLoading = false;\n        state.product = action.payload;\n      })\n      .addCase(fetchProductById.rejected, (state, action) => {\n        state.productLoading = false;\n        state.productError = action.error.message || 'Failed to fetch product details';\n      })\n      \n    // Handle fetching product categories\n    builder\n      .addCase(fetchProductCategories.pending, (state) => {\n        state.categoryLoading = true;\n        state.categoryError = null;\n      })\n      .addCase(fetchProductCategories.fulfilled, (state, action: PayloadAction<Category[]>) => {\n        state.categoryLoading = false;\n        state.categories = action.payload;\n      })\n      .addCase(fetchProductCategories.rejected, (state, action) => {\n        state.categoryLoading = false;\n        state.categoryError = action.error.message || 'Failed to fetch categories';\n      });\n  }\n});\n\n// Export actions and reducer\nexport const { clearProductError, clearProductState } = productsSlice.actions;\nexport default productsSlice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}