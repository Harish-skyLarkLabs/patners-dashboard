{"ast":null,"code":"import { createTheme } from \"@mui/material\";\nimport { darkModePalette, lightModePalette } from \"./palette.ts\";\nimport { typography } from \"./typography.ts\";\nexport let ThemeVariantsProps = /*#__PURE__*/function (ThemeVariantsProps) {\n  ThemeVariantsProps[\"light\"] = \"light\";\n  ThemeVariantsProps[\"dark\"] = \"dark\";\n  return ThemeVariantsProps;\n}({});\nexport const getTheme = mode => {\n  return createTheme({\n    palette: {\n      mode,\n      ...(mode === ThemeVariantsProps.light ? lightModePalette : darkModePalette)\n    },\n    typography\n  });\n};","map":{"version":3,"names":["createTheme","darkModePalette","lightModePalette","typography","ThemeVariantsProps","getTheme","mode","palette","light"],"sources":["/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/theme/index.ts"],"sourcesContent":["import { createTheme } from \"@mui/material\";\nimport { darkModePalette, lightModePalette } from \"./palette.ts\";\nimport { typography } from \"./typography.ts\";\n\nexport enum ThemeVariantsProps {\n  light = \"light\",\n  dark = \"dark\",\n}\n\nexport const getTheme = (mode: ThemeVariantsProps) => {\n  return createTheme({\n    palette: {\n      mode,\n      ...(mode === ThemeVariantsProps.light ? lightModePalette : darkModePalette),\n    },\n    typography,\n  });\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAC3C,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,cAAc;AAChE,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,WAAYC,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;AAK9B,OAAO,MAAMC,QAAQ,GAAIC,IAAwB,IAAK;EACpD,OAAON,WAAW,CAAC;IACjBO,OAAO,EAAE;MACPD,IAAI;MACJ,IAAIA,IAAI,KAAKF,kBAAkB,CAACI,KAAK,GAAGN,gBAAgB,GAAGD,eAAe;IAC5E,CAAC;IACDE;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}