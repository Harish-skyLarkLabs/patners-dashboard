{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ThemeVariantsProps } from \"../../theme/index.ts\";\n\n// Setting dark theme by default if the app is opened first time\nif (!localStorage.getItem(\"themeMode\")) localStorage.setItem(\"themeMode\", ThemeVariantsProps.dark);\nconst initialState = {\n  themeMode: localStorage.getItem(\"themeMode\") === ThemeVariantsProps.light ? ThemeVariantsProps.light : ThemeVariantsProps.dark\n};\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState,\n  reducers: {\n    toggleTheme: state => {\n      const newActiveTheme = state.themeMode === ThemeVariantsProps.light ? ThemeVariantsProps.dark : ThemeVariantsProps.light;\n      state.themeMode = newActiveTheme;\n      localStorage.setItem(\"themeMode\", newActiveTheme);\n    }\n  }\n});\nexport const {\n  toggleTheme\n} = themeSlice.actions;\nexport default themeSlice;","map":{"version":3,"names":["createSlice","ThemeVariantsProps","localStorage","getItem","setItem","dark","initialState","themeMode","light","themeSlice","name","reducers","toggleTheme","state","newActiveTheme","actions"],"sources":["/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/store/ui/themeSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { ThemeVariantsProps } from \"../../theme/index.ts\";\n\n// Setting dark theme by default if the app is opened first time\nif (!localStorage.getItem(\"themeMode\")) localStorage.setItem(\"themeMode\", ThemeVariantsProps.dark);\n\nexport interface ThemeStateType {\n  themeMode: ThemeVariantsProps;\n}\n\nconst initialState: ThemeStateType = {\n  themeMode: localStorage.getItem(\"themeMode\") === ThemeVariantsProps.light ? ThemeVariantsProps.light : ThemeVariantsProps.dark,\n};\n\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState,\n  reducers: {\n    toggleTheme: (state: ThemeStateType) => {\n      const newActiveTheme = state.themeMode === ThemeVariantsProps.light ? ThemeVariantsProps.dark : ThemeVariantsProps.light;\n      state.themeMode = newActiveTheme;\n      localStorage.setItem(\"themeMode\", newActiveTheme);\n    },\n  },\n});\n\nexport const { toggleTheme } = themeSlice.actions;\nexport default themeSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,QAAQ,sBAAsB;;AAEzD;AACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAED,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEH,kBAAkB,CAACI,IAAI,CAAC;AAMlG,MAAMC,YAA4B,GAAG;EACnCC,SAAS,EAAEL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAKF,kBAAkB,CAACO,KAAK,GAAGP,kBAAkB,CAACO,KAAK,GAAGP,kBAAkB,CAACI;AAC5H,CAAC;AAED,MAAMI,UAAU,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAqB,IAAK;MACtC,MAAMC,cAAc,GAAGD,KAAK,CAACN,SAAS,KAAKN,kBAAkB,CAACO,KAAK,GAAGP,kBAAkB,CAACI,IAAI,GAAGJ,kBAAkB,CAACO,KAAK;MACxHK,KAAK,CAACN,SAAS,GAAGO,cAAc;MAChCZ,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEU,cAAc,CAAC;IACnD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAY,CAAC,GAAGH,UAAU,CAACM,OAAO;AACjD,eAAeN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}