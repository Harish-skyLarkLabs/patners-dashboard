{"ast":null,"code":"var _jsxFileName = \"/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/contexts/SidebarContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContext = /*#__PURE__*/createContext(undefined);\nexport const SidebarProvider = ({\n  children\n}) => {\n  _s();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const toggleSidebar = () => {\n    setIsCollapsed(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      isCollapsed,\n      toggleSidebar,\n      setIsCollapsed\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(SidebarProvider, \"XL80Ke9pMdZ2JRKLtHkkSCCoQZ0=\");\n_c = SidebarProvider;\nexport const useSidebar = () => {\n  _s2();\n  const context = useContext(SidebarContext);\n  if (context === undefined) {\n    throw new Error('useSidebar must be used within a SidebarProvider');\n  }\n  return context;\n};\n_s2(useSidebar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SidebarContext","undefined","SidebarProvider","children","_s","isCollapsed","setIsCollapsed","toggleSidebar","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSidebar","_s2","context","Error","$RefreshReg$"],"sources":["/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/contexts/SidebarContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\ninterface SidebarContextType {\n    isCollapsed: boolean;\n    toggleSidebar: () => void;\n    setIsCollapsed: (value: boolean) => void;\n}\n\nconst SidebarContext = createContext<SidebarContextType | undefined>(undefined);\n\nexport const SidebarProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const [isCollapsed, setIsCollapsed] = useState(false);\n\n    const toggleSidebar = () => {\n        setIsCollapsed(prev => !prev);\n    };\n\n    return (\n        <SidebarContext.Provider\n            value={{\n                isCollapsed,\n                toggleSidebar,\n                setIsCollapsed\n            }}\n        >\n            {children}\n        </SidebarContext.Provider>\n    );\n};\n\nexport const useSidebar = () => {\n    const context = useContext(SidebarContext);\n    if (context === undefined) {\n        throw new Error('useSidebar must be used within a SidebarProvider');\n    }\n    return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnE,MAAMC,cAAc,gBAAGL,aAAa,CAAiCM,SAAS,CAAC;AAE/E,OAAO,MAAMC,eAAwD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxBD,cAAc,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EACjC,CAAC;EAED,oBACIT,OAAA,CAACC,cAAc,CAACS,QAAQ;IACpBC,KAAK,EAAE;MACHL,WAAW;MACXE,aAAa;MACbD;IACJ,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACV,EAAA,CAlBWF,eAAwD;AAAAa,EAAA,GAAxDb,eAAwD;AAoBrE,OAAO,MAAMc,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGtB,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAIkB,OAAO,KAAKjB,SAAS,EAAE;IACvB,MAAM,IAAIkB,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,UAAU;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}