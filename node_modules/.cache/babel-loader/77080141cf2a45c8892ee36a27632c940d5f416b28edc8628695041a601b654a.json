{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Mock user data for static implementation\nconst mockUser = {\n  id: 1,\n  email: \"user@example.com\",\n  first_name: \"John\",\n  last_name: \"Doe\",\n  username: \"john.doe\"\n};\nconst mockToken = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzM4NjIwNjI2LCJpYXQiOjE3MDcwODQ2MjYsImp0aSI6IjEyMzQ1NiIsInVzZXJfaWQiOjF9.mocktoken\";\nexport const login = createAsyncThunk(\"auth/login\", async (data, thunkAPI) => {\n  try {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // Simple validation - accept any email/password for demo\n    if (data.email && data.password) {\n      return {\n        data: {\n          access: mockToken,\n          user: mockUser\n        }\n      };\n    } else {\n      return thunkAPI.rejectWithValue({\n        error: {\n          data: {\n            detail: \"Invalid credentials\"\n          }\n        }\n      });\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error\n    });\n  }\n});\nexport const register = createAsyncThunk(\"auth/register\", async (data, thunkAPI) => {\n  try {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // Simple validation for registration\n    if (data.email && data.password && data.first_name && data.last_name) {\n      return {\n        data: {\n          message: \"Registration successful\"\n        }\n      };\n    } else {\n      return thunkAPI.rejectWithValue({\n        error: {\n          data: {\n            detail: \"Missing required fields\"\n          }\n        }\n      });\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error\n    });\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n  try {\n    // Simulate logout - just resolve successfully\n    await new Promise(resolve => setTimeout(resolve, 200));\n    return {\n      data: {\n        message: \"Logged out successfully\"\n      }\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","mockUser","id","email","first_name","last_name","username","mockToken","login","data","thunkAPI","Promise","resolve","setTimeout","password","access","user","rejectWithValue","error","detail","register","message","logout","_"],"sources":["/home/skylark/Desktop/PARTNERS-PROD/patners-dashboard/src/store/auth/authThunk.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Mock user data for static implementation\nconst mockUser = {\n  id: 1,\n  email: \"user@example.com\",\n  first_name: \"John\",\n  last_name: \"Doe\",\n  username: \"john.doe\"\n};\n\nconst mockToken = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzM4NjIwNjI2LCJpYXQiOjE3MDcwODQ2MjYsImp0aSI6IjEyMzQ1NiIsInVzZXJfaWQiOjF9.mocktoken\";\n\nexport const login = createAsyncThunk(\"auth/login\",async(data: Record<string, any>,thunkAPI)=>{\n    try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Simple validation - accept any email/password for demo\n        if (data.email && data.password) {\n            return {\n                data: {\n                    access: mockToken,\n                    user: mockUser\n                }\n            };\n        } else {\n            return thunkAPI.rejectWithValue({ \n                error: { \n                    data: { detail: \"Invalid credentials\" }\n                } \n            });\n        }\n    } catch (error) {\n        return thunkAPI.rejectWithValue({ error: error });\n    }\n})\n\nexport const register = createAsyncThunk(\"auth/register\",async(data:Record<string, any>,thunkAPI)=>{\n    try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Simple validation for registration\n        if (data.email && data.password && data.first_name && data.last_name) {\n            return {\n                data: {\n                    message: \"Registration successful\"\n                }\n            };\n        } else {\n            return thunkAPI.rejectWithValue({ \n                error: { \n                    data: { detail: \"Missing required fields\" }\n                } \n            });\n        }\n    } catch (error) {\n        return thunkAPI.rejectWithValue({ error: error });\n    }\n})\n\nexport const logout = createAsyncThunk(\"auth/logout\",async(_,thunkAPI)=>{\n    try {\n        // Simulate logout - just resolve successfully\n        await new Promise(resolve => setTimeout(resolve, 200));\n        return { data: { message: \"Logged out successfully\" } };\n    } catch (error) {\n        return thunkAPI.rejectWithValue({ error: error });\n    }\n})"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA,MAAMC,QAAQ,GAAG;EACfC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kBAAkB;EACzBC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAG,iKAAiK;AAEnL,OAAO,MAAMC,KAAK,GAAGR,gBAAgB,CAAC,YAAY,EAAC,OAAMS,IAAyB,EAACC,QAAQ,KAAG;EAC1F,IAAI;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IAEtD;IACA,IAAIH,IAAI,CAACN,KAAK,IAAIM,IAAI,CAACK,QAAQ,EAAE;MAC7B,OAAO;QACHL,IAAI,EAAE;UACFM,MAAM,EAAER,SAAS;UACjBS,IAAI,EAAEf;QACV;MACJ,CAAC;IACL,CAAC,MAAM;MACH,OAAOS,QAAQ,CAACO,eAAe,CAAC;QAC5BC,KAAK,EAAE;UACHT,IAAI,EAAE;YAAEU,MAAM,EAAE;UAAsB;QAC1C;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,OAAOR,QAAQ,CAACO,eAAe,CAAC;MAAEC,KAAK,EAAEA;IAAM,CAAC,CAAC;EACrD;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,QAAQ,GAAGpB,gBAAgB,CAAC,eAAe,EAAC,OAAMS,IAAwB,EAACC,QAAQ,KAAG;EAC/F,IAAI;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IAEtD;IACA,IAAIH,IAAI,CAACN,KAAK,IAAIM,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACL,UAAU,IAAIK,IAAI,CAACJ,SAAS,EAAE;MAClE,OAAO;QACHI,IAAI,EAAE;UACFY,OAAO,EAAE;QACb;MACJ,CAAC;IACL,CAAC,MAAM;MACH,OAAOX,QAAQ,CAACO,eAAe,CAAC;QAC5BC,KAAK,EAAE;UACHT,IAAI,EAAE;YAAEU,MAAM,EAAE;UAA0B;QAC9C;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,OAAOR,QAAQ,CAACO,eAAe,CAAC;MAAEC,KAAK,EAAEA;IAAM,CAAC,CAAC;EACrD;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,MAAM,GAAGtB,gBAAgB,CAAC,aAAa,EAAC,OAAMuB,CAAC,EAACb,QAAQ,KAAG;EACpE,IAAI;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IACtD,OAAO;MAAEH,IAAI,EAAE;QAAEY,OAAO,EAAE;MAA0B;IAAE,CAAC;EAC3D,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,OAAOR,QAAQ,CAACO,eAAe,CAAC;MAAEC,KAAK,EAAEA;IAAM,CAAC,CAAC;EACrD;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}